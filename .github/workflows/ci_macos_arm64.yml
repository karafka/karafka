name: CI macOS ARM64 Swarm

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches: [ master ]
  schedule:
    - cron:  '0 2 * * *'

permissions:
  contents: read

env:
  BUNDLE_RETRY: 6
  BUNDLE_JOBS: 4

jobs:
  swarm-macos:
    timeout-minutes: 30
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        ruby:
          - '3.5.0-preview1'
          - '3.4'
          - '3.3'
          - '3.2'
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install Homebrew dependencies
        run: |
          brew install kafka
          brew services start kafka

      - name: Set up Ruby
        uses: ruby/setup-ruby@efbf473cab83af4468e8606cc33eca9281bb213f # v1.256.0
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
          bundler: 'latest'

      - name: Wait for Kafka to be ready
        run: |
          timeout 60 bash -c 'until nc -z localhost 9092; do sleep 1; done'

      - name: Run swarm unit specs
        run: bundle exec rspec spec/lib/karafka/swarm/ --tag mode:fork

      - name: Run all swarm integration specs
        env:
          KARAFKA_PRO_LICENSE_TOKEN: ${{ secrets.KARAFKA_PRO_LICENSE_TOKEN }}
          KARAFKA_PRO_USERNAME: ${{ secrets.KARAFKA_PRO_USERNAME }}
          KARAFKA_PRO_PASSWORD: ${{ secrets.KARAFKA_PRO_PASSWORD }}
          KARAFKA_PRO_VERSION: ${{ secrets.KARAFKA_PRO_VERSION }}
          KARAFKA_PRO_LICENSE_CHECKSUM: ${{ secrets.KARAFKA_PRO_LICENSE_CHECKSUM }}
        run: bin/integrations swarm

  ci-success-macos:
    name: CI macOS ARM64 Swarm Success
    runs-on: macos-latest
    if: always()
    needs:
      - swarm-macos
    steps:
      - name: Check all jobs passed
        if: |
          contains(needs.*.result, 'failure') ||
          contains(needs.*.result, 'cancelled') ||
          contains(needs.*.result, 'skipped')
        run: exit 1
      - run: echo "All macOS ARM64 Swarm CI checks passed!"
