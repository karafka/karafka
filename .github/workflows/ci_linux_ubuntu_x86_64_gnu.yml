name: CI Linux x86_64 GNU

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches: [ master ]
  schedule:
    - cron:  '0 1 * * *'

permissions:
  contents: read

env:
  BUNDLE_RETRY: 6
  BUNDLE_JOBS: 4

jobs:
  diffend:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Set up Ruby
        uses: ruby/setup-ruby@3fee6763234110473bd57dd4595c5199fce2c510 # v1.258.0
        with:
          ruby-version: 3.4
          bundler-cache: true

      - name: Install Diffend plugin
        run: bundle plugin install diffend

      - name: Bundle Secure
        run: bundle secure

  karafka-checksum:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - name: Run Karafka license checksum verification
        env:
          KARAFKA_PRO_USERNAME: ${{ secrets.KARAFKA_PRO_USERNAME }}
          KARAFKA_PRO_PASSWORD: ${{ secrets.KARAFKA_PRO_PASSWORD }}
          KARAFKA_PRO_VERSION: ${{ secrets.KARAFKA_PRO_VERSION }}
          KARAFKA_PRO_LICENSE_CHECKSUM: ${{ secrets.KARAFKA_PRO_LICENSE_CHECKSUM }}
        run: bin/verify_license_integrity

  coditsu:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - name: Download Coditsu script
        run: |
          curl -sSL https://api.coditsu.io/run/ci -o coditsu_script.sh
          chmod +x coditsu_script.sh
      - name: Verify Coditsu script checksum
        run: |
          EXPECTED_SHA256="0aecc5aa010f53fca264548a41467a2b0a1208d750ce1da3e98a217304cacbbc"

          ACTUAL_SHA256=$(sha256sum coditsu_script.sh | awk '{ print $1 }')
          if [ "$ACTUAL_SHA256" != "$EXPECTED_SHA256" ]; then
            echo "::error::Checksum verification failed. Expected $EXPECTED_SHA256 but got $ACTUAL_SHA256."
            exit 1
          fi
      - name: Run Coditsu
        run: ./coditsu_script.sh

  # We do not split RSpec specs to OSS and Pro like integrations because they do not overload
  # Kafka heavily, compute total coverage for specs and are fast enough
  specs:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    needs: diffend
    env:
      BUNDLE_FORCE_RUBY_PLATFORM: ${{ matrix.force_ruby_platform }}
    strategy:
      fail-fast: false
      matrix:
        ruby:
          - '3.5.0-preview1'
          - '3.4'
          - '3.3'
          - '3.2'
        force_ruby_platform:
          - true
          - false
        include:
          - ruby: '3.4'
            coverage: 'true'
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Install package dependencies
        run: "[ -e $APT_DEPS ] || sudo apt-get install -y --no-install-recommends $APT_DEPS"

      - name: Start Kafka with docker compose
        run: |
          docker compose up -d || (sleep 5 && docker compose up -d)

      - name: Set up Ruby
        uses: ruby/setup-ruby@3fee6763234110473bd57dd4595c5199fce2c510 # v1.258.0
        with:
          ruby-version: ${{matrix.ruby}}
          bundler-cache: true
          bundler: 'latest'

      - name: Wait for Kafka
        run: |
          bundle exec bin/wait_for_kafka

      - name: Run all specs
        env:
          GITHUB_COVERAGE: ${{matrix.coverage}}
        run: bin/rspecs

      - name: Check Kafka logs for unexpected warnings
        run: bin/verify_kafka_warnings

      - name: Check test topics naming convention
        run: bundle exec bin/verify_topics_naming

  integrations_oss:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: diffend
    env:
      BUNDLE_FORCE_RUBY_PLATFORM: ${{ matrix.force_ruby_platform }}
    strategy:
      fail-fast: false
      matrix:
        ruby:
          - '3.5.0-preview1'
          - '3.4'
          - '3.3'
          - '3.2'
        force_ruby_platform:
          - true
          - false
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Install package dependencies
        run: "[ -e $APT_DEPS ] || sudo apt-get install -y --no-install-recommends $APT_DEPS"

      - name: Remove libzstd-dev to check no supported compressions
        run: sudo apt-get -y remove libzstd-dev

      - name: Start Kafka with docker compose
        run: |
          docker compose up -d || (sleep 5 && docker compose up -d)

      - name: Set up Ruby
        uses: ruby/setup-ruby@3fee6763234110473bd57dd4595c5199fce2c510 # v1.258.0
        with:
          # Do not use cache here as we run bundle install also later in some of the integration
          # tests and we need to be able to run it without cache
          #
          # We also want to check that librdkafka is compiling as expected on all versions of Ruby
          ruby-version: ${{matrix.ruby}}
          bundler: 'latest'

      - name: Install latest Bundler
        run: |
          gem install bundler --no-document
          gem update --system
          bundle config set without 'tools benchmarks docs'

      - name: Fix directory permissions for Bundler
        run: |
          chmod -R o-w /opt/hostedtoolcache/Ruby/3*/x64/lib/ruby/gems/3*/gems
          chmod +t /opt/hostedtoolcache/Ruby/3*/x64/lib/ruby/gems/3*/gems

      - name: Force Ruby platform for ffi gem on dev/preview Ruby
        if: contains(matrix.ruby, 'dev') || contains(matrix.ruby, 'preview') || contains(matrix.ruby, 'rc')
        run: bundle config set force_ruby_platform ffi

      - name: Bundle install
        run: |
          bundle config set without development
          bundle install --jobs 4 --retry 3

      - name: Wait for Kafka
        run: |
          bundle exec bin/wait_for_kafka

      - name: Run OSS integration tests
        run: bin/integrations --exclude '/pro'

      - name: Check Kafka logs for unexpected warnings
        run: bin/verify_kafka_warnings

      - name: Check test topics naming convention
        run: bundle exec bin/verify_topics_naming

  integrations_pro:
    timeout-minutes: 45
    runs-on: ubuntu-latest
    needs: diffend
    env:
      BUNDLE_FORCE_RUBY_PLATFORM: ${{ matrix.force_ruby_platform }}
    strategy:
      fail-fast: false
      matrix:
        ruby:
          - '3.5.0-preview1'
          - '3.4'
          - '3.3'
          - '3.2'
        force_ruby_platform:
          - true
          - false
        parallel_group:
          - '0'
          - '1'
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Install package dependencies
        run: "[ -e $APT_DEPS ] || sudo apt-get install -y --no-install-recommends $APT_DEPS"

      - name: Start Kafka with docker compose
        run: |
          docker compose up -d || (sleep 5 && docker compose up -d)

      - name: Set up Ruby
        uses: ruby/setup-ruby@3fee6763234110473bd57dd4595c5199fce2c510 # v1.258.0
        with:
          ruby-version: ${{matrix.ruby}}
          bundler: 'latest'

      - name: Install latest Bundler
        run: |
          gem install bundler --no-document
          gem update --system
          bundle config set without 'tools benchmarks docs'

      - name: Bundle install
        run: |
          bundle config set without development
          bundle install --jobs 4 --retry 3

      - name: Wait for Kafka
        run: |
          bundle exec bin/wait_for_kafka

      - name: Run Pro integration tests
        env:
          KARAFKA_PRO_LICENSE_TOKEN: ${{ secrets.KARAFKA_PRO_LICENSE_TOKEN }}
          KARAFKA_PRO_USERNAME: ${{ secrets.KARAFKA_PRO_USERNAME }}
          KARAFKA_PRO_PASSWORD: ${{ secrets.KARAFKA_PRO_PASSWORD }}
          KARAFKA_PRO_VERSION: ${{ secrets.KARAFKA_PRO_VERSION }}
          KARAFKA_PRO_LICENSE_CHECKSUM: ${{ secrets.KARAFKA_PRO_LICENSE_CHECKSUM }}
          SPECS_SEED: ${{ github.run_id }}
          SPECS_GROUP: ${{ matrix.parallel_group }}
        run: |
          bin/integrations '/pro'

      - name: Check Kafka logs for unexpected warnings
        run: bin/verify_kafka_warnings

      - name: Check test topics naming convention
        run: bin/verify_topics_naming

  ci-success:
    name: CI Linux Ubuntu x86_64 GNU Success
    runs-on: ubuntu-latest
    if: always()
    needs:
      - diffend
      - karafka-checksum
      - coditsu
      - specs
      - integrations_oss
      - integrations_pro
    steps:
      - name: Check all jobs passed
        if: |
          contains(needs.*.result, 'failure') ||
          contains(needs.*.result, 'cancelled') ||
          contains(needs.*.result, 'skipped')
        run: exit 1
      - run: echo "All CI checks passed!"
